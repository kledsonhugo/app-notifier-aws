
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.compute.data.template_file.user_data[0m will be read during apply
  # (config refers to values not yet known)
[0m [36m<=[0m[0m data "template_file" "user_data" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m rendered = (known after apply)
      [32m+[0m[0m template = <<-EOT
            #!/bin/bash
            
            
            # 1- Update/Install required OS packages
            yum update -y
            amazon-linux-extras install -y php7.2 epel
            yum install -y httpd mysql php-mtdowling-jmespath-php php-xml telnet tree git
            
            
            # 2- (Optional) Enable PHP to send AWS SNS events
            # NOTE: If uncommented, more configs are required
            # - Step 4: Deploy PHP app
            # - Module Compute: compute.tf and vars.tf manifests
            
            # 2.1- Config AWS SDK for PHP
            # mkdir -p /opt/aws/sdk/php/
            # cd /opt/aws/sdk/php/
            # wget https://docs.aws.amazon.com/aws-sdk-php/v3/download/aws.zip
            # unzip aws.zip
            
            # 2.2- Config AWS Account
            # mkdir -p /var/www/html/.aws/
            # cat <<EOT >> /var/www/html/.aws/credentials
            # [default]
            # aws_access_key_id=12345
            # aws_secret_access_key=12345
            # aws_session_token=12345
            # EOT
            
            
            # 3- Config PHP app Connection to Database
            cat <<EOT >> /var/www/config.php
            <?php
            define('DB_SERVER', '${rds_endpoint}');
            define('DB_USERNAME', '${rds_dbuser}');
            define('DB_PASSWORD', '${rds_dbpassword}');
            define('DB_DATABASE', '${rds_dbname}');
            ?>
            EOT
            
            
            # 4- Deploy PHP app
            cd /tmp
            git clone https://github.com/kledsonhugo/notifier
            cp /tmp/notifier/app/*.php /var/www/html/
            # mv /var/www/html/sendsms.php /var/www/html/index.php
            rm -rf /tmp/notifier
            
            
            # 5- Config Apache WebServer
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www
            find /var/www -type d -exec chmod 2775 {} \;
            find /var/www -type f -exec chmod 0664 {} \;
            
            
            # 6- Start Apache WebServer
            systemctl enable httpd
            service httpd restart
        EOT
      [32m+[0m[0m vars     = {
          [32m+[0m[0m "rds_dbname"     = "rdsdbnotifier"
          [32m+[0m[0m "rds_dbpassword" = "rdsdbadminpwd"
          [32m+[0m[0m "rds_dbuser"     = "rdsdbadmin"
        }
    }

[1m  # module.compute.aws_autoscaling_group.ec2_asg[0m will be created
[0m  [32m+[0m[0m resource "aws_autoscaling_group" "ec2_asg" {
      [32m+[0m[0m arn                       = (known after apply)
      [32m+[0m[0m availability_zones        = (known after apply)
      [32m+[0m[0m default_cooldown          = (known after apply)
      [32m+[0m[0m desired_capacity          = 4
      [32m+[0m[0m force_delete              = false
      [32m+[0m[0m force_delete_warm_pool    = false
      [32m+[0m[0m health_check_grace_period = 300
      [32m+[0m[0m health_check_type         = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m max_size                  = 8
      [32m+[0m[0m metrics_granularity       = "1Minute"
      [32m+[0m[0m min_size                  = 2
      [32m+[0m[0m name                      = "ec2-asg-notifier"
      [32m+[0m[0m name_prefix               = (known after apply)
      [32m+[0m[0m protect_from_scale_in     = false
      [32m+[0m[0m service_linked_role_arn   = (known after apply)
      [32m+[0m[0m target_group_arns         = (known after apply)
      [32m+[0m[0m vpc_zone_identifier       = (known after apply)
      [32m+[0m[0m wait_for_capacity_timeout = "10m"

      [32m+[0m[0m launch_template {
          [32m+[0m[0m id      = (known after apply)
          [32m+[0m[0m name    = (known after apply)
          [32m+[0m[0m version = "$Latest"
        }
    }

[1m  # module.compute.aws_launch_template.ec2_lt[0m will be created
[0m  [32m+[0m[0m resource "aws_launch_template" "ec2_lt" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m default_version        = (known after apply)
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m image_id               = "ami-069aabeee6f53e7bf"
      [32m+[0m[0m instance_type          = "t2.micro"
      [32m+[0m[0m key_name               = "vockey"
      [32m+[0m[0m latest_version         = (known after apply)
      [32m+[0m[0m name                   = "ec2-lt-notifier"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m user_data              = (known after apply)
      [32m+[0m[0m vpc_security_group_ids = (known after apply)
    }

[1m  # module.compute.aws_lb.ec2_lb[0m will be created
[0m  [32m+[0m[0m resource "aws_lb" "ec2_lb" {
      [32m+[0m[0m arn                                         = (known after apply)
      [32m+[0m[0m arn_suffix                                  = (known after apply)
      [32m+[0m[0m desync_mitigation_mode                      = "defensive"
      [32m+[0m[0m dns_name                                    = (known after apply)
      [32m+[0m[0m drop_invalid_header_fields                  = false
      [32m+[0m[0m enable_deletion_protection                  = false
      [32m+[0m[0m enable_http2                                = true
      [32m+[0m[0m enable_tls_version_and_cipher_suite_headers = false
      [32m+[0m[0m enable_waf_fail_open                        = false
      [32m+[0m[0m enable_xff_client_port                      = false
      [32m+[0m[0m id                                          = (known after apply)
      [32m+[0m[0m idle_timeout                                = 60
      [32m+[0m[0m internal                                    = (known after apply)
      [32m+[0m[0m ip_address_type                             = (known after apply)
      [32m+[0m[0m load_balancer_type                          = "application"
      [32m+[0m[0m name                                        = "ec2-lb-notifier"
      [32m+[0m[0m preserve_host_header                        = false
      [32m+[0m[0m security_groups                             = (known after apply)
      [32m+[0m[0m subnets                                     = (known after apply)
      [32m+[0m[0m tags_all                                    = (known after apply)
      [32m+[0m[0m vpc_id                                      = (known after apply)
      [32m+[0m[0m xff_header_processing_mode                  = "append"
      [32m+[0m[0m zone_id                                     = (known after apply)
    }

[1m  # module.compute.aws_lb_listener.ec2_lb_listener[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_listener" "ec2_lb_listener" {
      [32m+[0m[0m arn               = (known after apply)
      [32m+[0m[0m id                = (known after apply)
      [32m+[0m[0m load_balancer_arn = (known after apply)
      [32m+[0m[0m port              = 80
      [32m+[0m[0m protocol          = "HTTP"
      [32m+[0m[0m ssl_policy        = (known after apply)
      [32m+[0m[0m tags_all          = (known after apply)

      [32m+[0m[0m default_action {
          [32m+[0m[0m order            = (known after apply)
          [32m+[0m[0m target_group_arn = (known after apply)
          [32m+[0m[0m type             = "forward"
        }
    }

[1m  # module.compute.aws_lb_target_group.ec2_lb_tg[0m will be created
[0m  [32m+[0m[0m resource "aws_lb_target_group" "ec2_lb_tg" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m arn_suffix                         = (known after apply)
      [32m+[0m[0m connection_termination             = false
      [32m+[0m[0m deregistration_delay               = "300"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m ip_address_type                    = (known after apply)
      [32m+[0m[0m lambda_multi_value_headers_enabled = false
      [32m+[0m[0m load_balancing_algorithm_type      = (known after apply)
      [32m+[0m[0m load_balancing_cross_zone_enabled  = (known after apply)
      [32m+[0m[0m name                               = "ec2-lb-tg-notifier"
      [32m+[0m[0m port                               = 80
      [32m+[0m[0m preserve_client_ip                 = (known after apply)
      [32m+[0m[0m protocol                           = "HTTP"
      [32m+[0m[0m protocol_version                   = (known after apply)
      [32m+[0m[0m proxy_protocol_v2                  = false
      [32m+[0m[0m slow_start                         = 0
      [32m+[0m[0m tags_all                           = (known after apply)
      [32m+[0m[0m target_type                        = "instance"
      [32m+[0m[0m vpc_id                             = (known after apply)
    }

[1m  # module.database.aws_db_instance.rds_dbinstance[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "rds_dbinstance" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 20
      [32m+[0m[0m apply_immediately                     = false
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = true
      [32m+[0m[0m availability_zone                     = (known after apply)
      [32m+[0m[0m backup_retention_period               = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_name                               = "rdsdbnotifier"
      [32m+[0m[0m db_subnet_group_name                  = "rds-sn-group-notifier"
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "mysql"
      [32m+[0m[0m engine_version                        = "8.0.23"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = "rds-notifier"
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t2.micro"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m max_allocated_storage                 = 0
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = false
      [32m+[0m[0m name                                  = (known after apply)
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = "rds-param-group-notifier"
      [32m+[0m[0m password                              = (sensitive value)
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m publicly_accessible                   = false
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = "gp2"
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "rdsdbadmin"
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # module.database.aws_db_parameter_group.rds_param_group[0m will be created
[0m  [32m+[0m[0m resource "aws_db_parameter_group" "rds_param_group" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m family      = "mysql8.0"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "rds-param-group-notifier"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)

      [32m+[0m[0m parameter {
          [32m+[0m[0m apply_method = "immediate"
          [32m+[0m[0m name         = "character_set_database"
          [32m+[0m[0m value        = "utf8"
        }
      [32m+[0m[0m parameter {
          [32m+[0m[0m apply_method = "immediate"
          [32m+[0m[0m name         = "character_set_server"
          [32m+[0m[0m value        = "utf8"
        }
    }

[1m  # module.database.aws_db_subnet_group.rds_sn_group[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "rds_sn_group" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Managed by Terraform"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "rds-sn-group-notifier"
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags_all                = (known after apply)
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.network.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags_all = (known after apply)
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.network.aws_route_table.rt_priv[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "rt_priv" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = (known after apply)
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.network.aws_route_table.rt_pub[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "rt_pub" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m instance_id                = ""
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags_all         = (known after apply)
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.network.aws_route_table_association.rt_pub_sn_priv_az1[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt_pub_sn_priv_az1" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.rt_pub_sn_priv_az2[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt_pub_sn_priv_az2" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.rt_pub_sn_pub_az1[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt_pub_sn_pub_az1" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.network.aws_route_table_association.rt_pub_sn_pub_az2[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "rt_pub_sn_pub_az2" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.network.aws_security_group.vpc_sg_priv[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "vpc_sg_priv" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.0.0.0/16",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.network.aws_security_group.vpc_sg_pub[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "vpc_sg_pub" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Managed by Terraform"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 22
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 22
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 80
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "tcp"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 80
            },
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "10.0.0.0/16",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = false
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m name                   = (known after apply)
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags_all               = (known after apply)
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.network.aws_subnet.sn_priv_az1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "sn_priv_az1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.network.aws_subnet.sn_priv_az2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "sn_priv_az2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.network.aws_subnet.sn_pub_az1[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "sn_pub_az1" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.network.aws_subnet.sn_pub_az2[0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "sn_pub_az2" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1c"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = true
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags_all                                       = (known after apply)
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.network.aws_vpc.vpc[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_classiclink                   = (known after apply)
      [32m+[0m[0m enable_classiclink_dns_support       = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags_all                             = (known after apply)
    }

[1mPlan:[0m 22 to add, 0 to change, 0 to destroy.
[0m[0m[1mmodule.database.aws_db_parameter_group.rds_param_group: Creating...[0m[0m
[0m[1mmodule.network.aws_vpc.vpc: Creating...[0m[0m
[0m[1mmodule.database.aws_db_parameter_group.rds_param_group: Creation complete after 4s [id=rds-param-group-notifier][0m
[0m[1mmodule.network.aws_vpc.vpc: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.network.aws_vpc.vpc: Creation complete after 13s [id=vpc-05595306e93395a80][0m
[0m[1mmodule.network.aws_route_table.rt_priv: Creating...[0m[0m
[0m[1mmodule.network.aws_internet_gateway.igw: Creating...[0m[0m
[0m[1mmodule.network.aws_subnet.sn_priv_az1: Creating...[0m[0m
[0m[1mmodule.network.aws_subnet.sn_pub_az1: Creating...[0m[0m
[0m[1mmodule.network.aws_subnet.sn_priv_az2: Creating...[0m[0m
[0m[1mmodule.compute.aws_lb_target_group.ec2_lb_tg: Creating...[0m[0m
[0m[1mmodule.network.aws_subnet.sn_pub_az2: Creating...[0m[0m
[0m[1mmodule.network.aws_security_group.vpc_sg_priv: Creating...[0m[0m
[0m[1mmodule.network.aws_security_group.vpc_sg_pub: Creating...[0m[0m
[0m[1mmodule.network.aws_internet_gateway.igw: Creation complete after 2s [id=igw-0ba783d0774aa3370][0m
[0m[1mmodule.network.aws_route_table.rt_pub: Creating...[0m[0m
[0m[1mmodule.network.aws_subnet.sn_priv_az1: Creation complete after 2s [id=subnet-0ff87a3e2daef5202][0m
[0m[1mmodule.network.aws_subnet.sn_priv_az2: Creation complete after 2s [id=subnet-038941e67b85b040d][0m
[0m[1mmodule.database.aws_db_subnet_group.rds_sn_group: Creating...[0m[0m
[0m[1mmodule.network.aws_route_table.rt_priv: Creation complete after 2s [id=rtb-03d86c8c62ba254c9][0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_priv_az1: Creating...[0m[0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_priv_az2: Creating...[0m[0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_priv_az2: Creation complete after 1s [id=rtbassoc-045f12a052a8d52dd][0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_priv_az1: Creation complete after 1s [id=rtbassoc-0ce80536402898f50][0m
[0m[1mmodule.database.aws_db_subnet_group.rds_sn_group: Creation complete after 1s [id=rds-sn-group-notifier][0m
[0m[1mmodule.compute.aws_lb_target_group.ec2_lb_tg: Creation complete after 4s [id=arn:aws:elasticloadbalancing:us-east-1:122881415433:targetgroup/ec2-lb-tg-notifier/255e063cd924d56c][0m
[0m[1mmodule.network.aws_route_table.rt_pub: Creation complete after 2s [id=rtb-025980ad10efe70a0][0m
[0m[1mmodule.network.aws_security_group.vpc_sg_priv: Creation complete after 5s [id=sg-099a9a8f2d8fbfa11][0m
[0m[1mmodule.network.aws_security_group.vpc_sg_pub: Creation complete after 5s [id=sg-03409af308bee89bd][0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Creating...[0m[0m
[0m[1mmodule.network.aws_subnet.sn_pub_az2: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.network.aws_subnet.sn_pub_az1: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.network.aws_subnet.sn_pub_az1: Creation complete after 12s [id=subnet-040d159f64c4b5c1b][0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_pub_az1: Creating...[0m[0m
[0m[1mmodule.network.aws_subnet.sn_pub_az2: Creation complete after 13s [id=subnet-0cad546c02c42c96b][0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_pub_az2: Creating...[0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Creating...[0m[0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_pub_az1: Creation complete after 1s [id=rtbassoc-0d494877f15e8d8c0][0m
[0m[1mmodule.network.aws_route_table_association.rt_pub_sn_pub_az2: Creation complete after 0s [id=rtbassoc-00e0c2a7418735a55][0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [1m0s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [1m10s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [1m20s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [1m30s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [1m40s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [1m50s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [2m0s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [2m10s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [2m20s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [2m30s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Still creating... [2m30s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [2m40s elapsed][0m[0m
[0m[1mmodule.compute.aws_lb.ec2_lb: Creation complete after 2m34s [id=arn:aws:elasticloadbalancing:us-east-1:122881415433:loadbalancer/app/ec2-lb-notifier/0b647f3432a17ce4][0m
[0m[1mmodule.compute.aws_lb_listener.ec2_lb_listener: Creating...[0m[0m
[0m[1mmodule.compute.aws_lb_listener.ec2_lb_listener: Creation complete after 0s [id=arn:aws:elasticloadbalancing:us-east-1:122881415433:listener/app/ec2-lb-notifier/0b647f3432a17ce4/7b3099c312759d06][0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [2m50s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [3m0s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [3m10s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [3m20s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [3m30s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [3m40s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [3m50s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [4m0s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [4m10s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [4m20s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [4m30s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [4m40s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [4m50s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [5m0s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [5m10s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [5m20s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [5m30s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [5m40s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [5m50s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Still creating... [6m0s elapsed][0m[0m
[0m[1mmodule.database.aws_db_instance.rds_dbinstance: Creation complete after 6m0s [id=rds-notifier][0m
[0m[1mmodule.compute.data.template_file.user_data: Reading...[0m[0m
[0m[1mmodule.compute.data.template_file.user_data: Read complete after 0s [id=c7b04173e79c70ab40b3e15bd81945905b7186a5eea92f678afeab1b220b3bcd][0m
[0m[1mmodule.compute.aws_launch_template.ec2_lt: Creating...[0m[0m
[0m[1mmodule.compute.aws_launch_template.ec2_lt: Creation complete after 1s [id=lt-0129964374f27b2db][0m
[0m[1mmodule.compute.aws_autoscaling_group.ec2_asg: Creating...[0m[0m
[0m[1mmodule.compute.aws_autoscaling_group.ec2_asg: Still creating... [10s elapsed][0m[0m
[0m[1mmodule.compute.aws_autoscaling_group.ec2_asg: Still creating... [20s elapsed][0m[0m
[0m[1mmodule.compute.aws_autoscaling_group.ec2_asg: Still creating... [30s elapsed][0m[0m
[0m[1mmodule.compute.aws_autoscaling_group.ec2_asg: Still creating... [40s elapsed][0m[0m
[0m[1mmodule.compute.aws_autoscaling_group.ec2_asg: Still creating... [50s elapsed][0m[0m
[0m[1mmodule.compute.aws_autoscaling_group.ec2_asg: Creation complete after 55s [id=ec2-asg-notifier][0m
[0m[1m[32m
Apply complete! Resources: 22 added, 0 changed, 0 destroyed.
[0m